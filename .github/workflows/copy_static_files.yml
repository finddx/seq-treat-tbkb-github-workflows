name: Reusable workflow for building and deploying front-end

on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
      runner:
        required: true
        type: string
      deploy_type:
        required: true
        type: string
    secrets:
      AWS_ACCOUNT_ID:
        required: true
     

env:
  bucket_tag: ${{inputs.deploy_type=='frontend' && 'static-files' || 'django-static-files'}}
  destination_folder: ${{inputs.deploy_type=='backend' && '/static_files/' || ''}}
jobs:
  copy_static_static:
    environment: ${{inputs.environment}}
    runs-on: ${{inputs.runner}}
    defaults:
      run:
        shell: bash
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with: 
          name: ${{inputs.environment}}-static
          path: static/
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{secrets.AWS_ACCOUNT_ID}}:role/${{vars.PROJECT_NAME}}-main-${{inputs.environment}}-my-github-actions-${{inputs.deploy_type}}
          aws-region: ${{vars.AWS_REGION}}
          mask-aws-account-id: true
      - name: Get bucket ARN via tags
        uses: finddx/seq-treat-tbkb-github-actions/get-aws-resource-by-tag@getresv1
        id: bucket
        with:
          tag_filters: "--tag-filters Key=Usage,Values=${{env.bucket_tag}} Key=Environment,Values=${{inputs.environment}}"
          resource_type: "s3:bucket"
          aws_region: ${{vars.AWS_REGION}}
      - name: Get CF distribution ARN via tags
        uses: finddx/seq-treat-tbkb-github-actions/get-aws-resource-by-tag@getresv1
        id: distribution
        with:
          tag_filters: "--tag-filters Key=Environment,Values=${{inputs.environment}}"
          resource_type: "cloudfront"
          aws_region: "us-east-1"
      - name: Clean up bucket and copy new files
        env: 
          BUCKET_FULL_ARN: ${{steps.bucket.outputs.resource_id}}
        run: |
          bucket_name=$(echo ${BUCKET_FULL_ARN} | sed "s/.*://")
          aws s3 rm --recursive s3://${bucket_name}
          aws s3 cp static/ s3://${bucket_name}${{env.destination_folder}} --recursive --include "*"
      - name: Invalidate Cloudfront distribution
        env: 
          DISTRIBUTION_FULL_ARN: ${{steps.distribution.outputs.resource_id}}        
        run: |
          distribution_id=$(echo ${DISTRIBUTION_FULL_ARN} | sed 's|.*/||')
          INVALIDATION_ID=$(aws cloudfront create-invalidation --distribution-id ${distribution_id} --paths "/*"  --output text --query 'Invalidation.Id')
          aws cloudfront wait invalidation-completed --distribution-id ${distribution_id} --id ${INVALIDATION_ID}